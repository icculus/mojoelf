/**
 * MojoELF; load ELF binaries from a memory buffer.
 *
 * Please see the file LICENSE.txt in the source's root directory.
 *
 *  This file written by Ryan C. Gordon.
 */

// Do not #pragma once this file, it's intentionally included multiple times.

MACTRAMPOLINE_OVERRIDE(void*,alGetProcAddress,(const ALchar *a))
MACTRAMPOLINE_OVERRIDE(void*,alcGetProcAddress,(ALCdevice *a, const ALCchar *b))

MACTRAMPOLINE(ALCcontext*,alcCreateContext,(ALCdevice *a,const ALCint *b),(a,b),return)
MACTRAMPOLINE(ALCboolean,alcMakeContextCurrent,(ALCcontext *a),(a),return)
MACTRAMPOLINE(void,alcProcessContext,(ALCcontext *a),(a),)
MACTRAMPOLINE(void,alcSuspendContext,(ALCcontext *a),(a),)
MACTRAMPOLINE(void,alcDestroyContext,(ALCcontext *a),(a),)
MACTRAMPOLINE(ALCcontext*,alcGetCurrentContext,(void),(),return)
MACTRAMPOLINE(ALCdevice*,alcGetContextsDevice,(ALCcontext *a),(a),return)
MACTRAMPOLINE(ALCdevice*,alcOpenDevice,(const ALCchar *a),(a),return)
MACTRAMPOLINE(ALCboolean,alcCloseDevice,(ALCdevice *a),(a),return)
MACTRAMPOLINE(ALCenum,alcGetError,(ALCdevice *a),(a),return)
MACTRAMPOLINE(ALCboolean,alcIsExtensionPresent,(ALCdevice *a, const ALCchar *b),(a,b),return)
MACTRAMPOLINE(ALCenum,alcGetEnumValue,(ALCdevice *a, const ALCchar *b),(a,b),return)
MACTRAMPOLINE(const ALCchar*,alcGetString,(ALCdevice *a, ALCenum b),(a,b),return)
MACTRAMPOLINE(void,alcGetIntegerv,(ALCdevice *a, ALCenum b, ALCsizei c, ALCint *d),(a,b,c,d),return)
MACTRAMPOLINE(ALCdevice*,alcCaptureOpenDevice,(const ALCchar *a, ALCuint b, ALCenum c, ALCsizei d),(a,b,c,d),return)
MACTRAMPOLINE(ALCboolean,alcCaptureCloseDevice,(ALCdevice *a),(a),return)
MACTRAMPOLINE(void,alcCaptureStart,(ALCdevice *a),(a),)
MACTRAMPOLINE(void,alcCaptureStop,(ALCdevice *a),(a),)
MACTRAMPOLINE(void,alcCaptureSamples,(ALCdevice *a, ALCvoid *b, ALCsizei c),(a,b,c),)
MACTRAMPOLINE(void,alEnable,(ALenum a),(a),)
MACTRAMPOLINE(void,alDisable,(ALenum a),(a),)
MACTRAMPOLINE(ALboolean,alIsEnabled,(ALenum a),(a),return)
MACTRAMPOLINE(const ALchar*,alGetString,(ALenum a),(a),return)
MACTRAMPOLINE(void,alGetBooleanv,(ALenum a, ALboolean *b),(a,b),)
MACTRAMPOLINE(void,alGetIntegerv,(ALenum a, ALint *b),(a,b),)
MACTRAMPOLINE(void,alGetFloatv,(ALenum a, ALfloat *b),(a,b),)
MACTRAMPOLINE(void,alGetDoublev,(ALenum a, ALdouble *b),(a,b),)
MACTRAMPOLINE(ALboolean,alGetBoolean,(ALenum a),(a),return)
MACTRAMPOLINE(ALint,alGetInteger,(ALenum a),(a),return)
MACTRAMPOLINE(ALfloat,alGetFloat,(ALenum a),(a),return)
MACTRAMPOLINE(ALdouble,alGetDouble,(ALenum a),(a),return)
MACTRAMPOLINE(ALenum,alGetError,(void),(),return)
MACTRAMPOLINE(ALboolean,alIsExtensionPresent,(const ALchar *a),(a),return)
MACTRAMPOLINE(ALenum,alGetEnumValue,(const ALchar *a),(a),return)
MACTRAMPOLINE(void,alListenerf,(ALenum a, ALfloat b),(a,b),)
MACTRAMPOLINE(void,alListener3f,(ALenum a, ALfloat b, ALfloat c, ALfloat d),(a,b,c,d),)
MACTRAMPOLINE(void,alListenerfv,(ALenum a, const ALfloat *b),(a,b),)
MACTRAMPOLINE(void,alListeneri,(ALenum a, ALint b),(a,b),)
MACTRAMPOLINE(void,alListener3i,(ALenum a, ALint b, ALint c, ALint d),(a,b,c,d),)
MACTRAMPOLINE(void,alListeneriv,(ALenum a, const ALint *b),(a,b),)
MACTRAMPOLINE(void,alGetListenerf,(ALenum a, ALfloat *b),(a,b),)
MACTRAMPOLINE(void,alGetListener3f,(ALenum a, ALfloat *b, ALfloat *c, ALfloat *d),(a,b,c,d),)
MACTRAMPOLINE(void,alGetListenerfv,(ALenum a, ALfloat *b),(a,b),)
MACTRAMPOLINE(void,alGetListeneri,(ALenum a, ALint *b),(a,b),)
MACTRAMPOLINE(void,alGetListener3i,(ALenum a, ALint *b, ALint *c, ALint *d),(a,b,c,d),)
MACTRAMPOLINE(void,alGetListeneriv,(ALenum a, ALint *b),(a,b),)
MACTRAMPOLINE(void,alGenSources,(ALsizei a, ALuint *b),(a,b),)
MACTRAMPOLINE(void,alDeleteSources,(ALsizei a, const ALuint *b),(a,b),)
MACTRAMPOLINE(ALboolean,alIsSource,(ALuint a),(a),return)
MACTRAMPOLINE(void,alSourcef,(ALuint a, ALenum b, ALfloat c),(a,b,c),)
MACTRAMPOLINE(void,alSource3f,(ALuint a, ALenum b, ALfloat c, ALfloat d, ALfloat e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alSourcefv,(ALuint a, ALenum b, const ALfloat *c),(a,b,c),)
MACTRAMPOLINE(void,alSourcei,(ALuint a, ALenum b, ALint c),(a,b,c),)
MACTRAMPOLINE(void,alSource3i,(ALuint a, ALenum b, ALint c, ALint d, ALint e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alSourceiv,(ALuint a, ALenum b, const ALint *c),(a,b,c),)
MACTRAMPOLINE(void,alGetSourcef,(ALuint a, ALenum b, ALfloat *c),(a,b,c),)
MACTRAMPOLINE(void,alGetSource3f,(ALuint a, ALenum b, ALfloat *c, ALfloat *d, ALfloat *e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alGetSourcefv,(ALuint a, ALenum b, ALfloat *c),(a,b,c),)
MACTRAMPOLINE(void,alGetSourcei,(ALuint a,  ALenum b, ALint *c),(a,b,c),)
MACTRAMPOLINE(void,alGetSource3i,(ALuint a, ALenum b, ALint *c, ALint *d, ALint *e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alGetSourceiv,(ALuint a,  ALenum b, ALint *c),(a,b,c),)
MACTRAMPOLINE(void,alSourcePlayv,(ALsizei a, const ALuint *b),(a,b),)
MACTRAMPOLINE(void,alSourceStopv,(ALsizei a, const ALuint *b),(a,b),)
MACTRAMPOLINE(void,alSourceRewindv,(ALsizei a, const ALuint *b),(a,b),)
MACTRAMPOLINE(void,alSourcePausev,(ALsizei a, const ALuint *b),(a,b),)
MACTRAMPOLINE(void,alSourcePlay,(ALuint a),(a),)
MACTRAMPOLINE(void,alSourceStop,(ALuint a),(a),)
MACTRAMPOLINE(void,alSourceRewind,(ALuint a),(a),)
MACTRAMPOLINE(void,alSourcePause,(ALuint a),(a),)
MACTRAMPOLINE(void,alSourceQueueBuffers,(ALuint a, ALsizei b, const ALuint *c),(a,b,c),)
MACTRAMPOLINE(void,alSourceUnqueueBuffers,(ALuint a, ALsizei b, ALuint *c),(a,b,c),)
MACTRAMPOLINE(void,alGenBuffers,(ALsizei a, ALuint *b),(a,b),)
MACTRAMPOLINE(void,alDeleteBuffers,(ALsizei a, const ALuint *b),(a,b),)
MACTRAMPOLINE(ALboolean,alIsBuffer,(ALuint a),(a),return)
MACTRAMPOLINE(void,alBufferData,(ALuint a, ALenum b, const ALvoid *c, ALsizei d, ALsizei e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alBufferf,(ALuint a, ALenum b, ALfloat c),(a,b,c),)
MACTRAMPOLINE(void,alBuffer3f,(ALuint a, ALenum b, ALfloat c, ALfloat d, ALfloat e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alBufferfv,(ALuint a, ALenum b, const ALfloat *c),(a,b,c),)
MACTRAMPOLINE(void,alBufferi,(ALuint a, ALenum b, ALint c),(a,b,c),)
MACTRAMPOLINE(void,alBuffer3i,(ALuint a, ALenum b, ALint c, ALint d, ALint e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alBufferiv,(ALuint a, ALenum b, const ALint *c),(a,b,c),)
MACTRAMPOLINE(void,alGetBufferf,(ALuint a, ALenum b, ALfloat *c),(a,b,c),)
MACTRAMPOLINE(void,alGetBuffer3f,(ALuint a, ALenum b, ALfloat *c, ALfloat *d, ALfloat *e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alGetBufferfv,(ALuint a, ALenum b, ALfloat *c),(a,b,c),)
MACTRAMPOLINE(void,alGetBufferi,(ALuint a, ALenum b, ALint *c),(a,b,c),)
MACTRAMPOLINE(void,alGetBuffer3i,(ALuint a, ALenum b, ALint *c, ALint *d, ALint *e),(a,b,c,d,e),)
MACTRAMPOLINE(void,alGetBufferiv,(ALuint a, ALenum b, ALint *c),(a,b,c),)
MACTRAMPOLINE(void,alDopplerFactor,(ALfloat a),(a),)
MACTRAMPOLINE(void,alDopplerVelocity,(ALfloat a),(a),)
MACTRAMPOLINE(void,alSpeedOfSound,(ALfloat a),(a),)
MACTRAMPOLINE(void,alDistanceModel,(ALenum a),(a),)

// Apple extension entry points...
MACTRAMPOLINE(void,alcMacOSXRenderingQuality,(ALint a),(a),)
MACTRAMPOLINE(void,alMacOSXRenderChannelCount,(ALint a),(a),)
MACTRAMPOLINE(void,alcMacOSXMixerMaxiumumBusses,(ALint a),(a),)
MACTRAMPOLINE(void,alcMacOSXMixerOutputRate,(ALdouble a),(a),)
MACTRAMPOLINE(ALint,alcMacOSXGetRenderingQuality,(void),(),return)
MACTRAMPOLINE(ALint,alMacOSXGetRenderChannelCount,(void),(),return)
MACTRAMPOLINE(ALint,alcMacOSXGetMixerMaxiumumBusses,(void),(),return)
MACTRAMPOLINE(ALdouble,alcMacOSXGetMixerOutputRate,(void),(),return)
MACTRAMPOLINE(void,alBufferDataStatic,(ALint a, ALenum b, const void *c, ALsizei d, ALsizei e),(a,b,c,d,e),)
MACTRAMPOLINE(ALenum,alSourceAddNotification,(ALuint a, ALuint b, alSourceNotificationProc c, void *d),(a,b,c,d),return)
MACTRAMPOLINE(void,alSourceRemoveNotification,(ALuint a, ALuint b, alSourceNotificationProc c, void *d),(a,b,c,d),)
MACTRAMPOLINE(ALenum,alcASAGetSource,(ALuint a, ALuint b, void *c, ALuint *d),(a,b,c,d),return)
MACTRAMPOLINE(ALenum,alcASASetSource,(ALuint a, ALuint b, void *c, ALuint d),(a,b,c,d),return)
MACTRAMPOLINE(ALenum,alcASAGetListener,(ALuint a, void *b, ALuint *c),(a,b,c),return)
MACTRAMPOLINE(ALenum,alcASASetListener,(ALuint a, void *b, ALuint c),(a,b,c),return)

// end of mactrampolines_openal.h ...

